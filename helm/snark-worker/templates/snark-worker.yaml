{{- if $.Values.worker.active }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snark-worker-{{ trunc -6 .Values.coordinator.publicKey | lower }}
  labels:
    app: snark-worker-{{ trunc -6 .Values.coordinator.publicKey | lower }}
spec:
  replicas: {{ $.Values.worker.numReplicas }}
  selector:
    matchLabels:
      app: snark-worker-{{ trunc -6 .Values.coordinator.publicKey | lower }}
  template:
    metadata:
      labels:
        app: snark-worker-{{ trunc -6 .Values.coordinator.publicKey | lower }}
        testnet: {{ $.Values.testnetName }}
        role: snark-worker
        version: {{ (split ":" $.Values.coda.image)._1 }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '10000'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: worker
        resources:
          limits:
            memory: 3.0Gi
          requests:
            memory: 2.0Gi
            cpu: 1000m
        image: {{ $.Values.coda.image }}
        command: ["bash", "-c"]
        args: [ "sleep 120 && coda internal snark-worker -daemon-address '{{ tpl $.Values.worker.remoteCoordinatorHost .}}:{{$.Values.worker.remoteCoordinatorPort}}'" ]
        env:
        imagePullPolicy: Always
{{ end }}