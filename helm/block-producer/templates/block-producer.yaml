{{ range $i, $e := until (.Values.numProducers | int)}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.blockProducerClass }}-block-producer-{{ add $i 1 $.Values.labelOffset }}
  labels:
    app: {{ $.Values.blockProducerClass }}-block-producer-{{ add $i 1 $.Values.labelOffset }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Values.blockProducerClass }}-block-producer-{{ add $i 1 $.Values.labelOffset }}
  template:
    metadata:
      labels:
        app: {{ $.Values.blockProducerClass }}-block-producer-{{ add $i 1 $.Values.labelOffset }}
        testnet: {{ $.Values.testnetName }}
        role: block-producer
        class: {{ $.Values.blockProducerClass }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '10000'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - /bin/cp /keys/* /wallet-keys && /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: {{ $.Values.codaImage }}
        command:
        - bash
        - -c
        - coda advanced import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/key
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: {{ $.Values.codaPrivkeyPass | quote }} 
      containers:
      {{ if ne $.Values.agentImage "" }}
      - name: user-agent
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: {{ $.Values.agentImage }}
        command: ["bash"]
        args: ["-c", {{ range $.Values.agentCommand }} {{- . | quote }}, {{end}}]
        env: 
          - name: AGENT_SEND_EVERY_MINUTES
            value: "10"
          - name: CODA_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.keySecretTemplatePrefix }}-{{ add $i 1 $.Values.labelOffset }}-key
                key: pub
          - name: CODA_PRIVKEY_PASS
            value: {{ $.Values.codaPrivkeyPass | quote }}
        ports: 
          - name: metrics
            containerPort: 8000
        imagePullPolicy: Always
      {{ end -}}
      - name: coda
        resources:
          limits:
            memory: 6.0Gi
          requests:
            memory: 2.0Gi
            cpu: 1
        image: {{ $.Values.codaImage }}
        command: ["coda"]
        args: [ "daemon",
          "-log-level", "Trace",
          "-log-json",
          "-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key",
          {{- range $.Values.seedPeers }}
          "-peer", {{ . | quote }},
          {{- end }}
        ]
        env:
          - name: DAEMON_REST_PORT
            value: "3085"
          - name: DAEMON_CLIENT_PORT
            value: "8301"
          - name: DAEMON_METRICS_PORT
            value: "10000"
          - name: DAEMON_EXTERNAL_PORT
            value: {{ add $.Values.startingPorts $i $.Values.labelOffset | quote }}
          - name: CODA_PRIVKEY_PASS
            value: {{ $.Values.codaPrivkeyPass | quote }}
        ports:
          - containerPort: {{ add $.Values.startingPorts $i $.Values.labelOffset }}
            hostPort: {{ add $.Values.startingPorts $i $.Values.labelOffset }}
            protocol: TCP
          - name: metrics
            containerPort: 10000
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
      volumes:
      - name: private-keys
        secret:
          secretName: {{ $.Values.keySecretTemplatePrefix }}-{{ add $i 1 $.Values.labelOffset }}-key
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
---
{{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ uuidv4 }}-block-producer-fixit-secret
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm