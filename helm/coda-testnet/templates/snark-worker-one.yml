apiVersion: apps/v1
kind: Deployment
metadata:
  name: snark-worker-one
  labels:
    app: snark-worker-one
spec:
  replicas: {{ .Values.snarkWorker.replicas }}
  selector:
    matchLabels:
      app: snark-worker-one
  template:
    metadata:
      labels:
        app: snark-worker-one
        testnet: {{ .Values.testnetName }}
        role: snark-worker
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '10004'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: coda
        resources:
          limits:
            memory: 10.5Gi
          requests:
            memory: 6Gi
        image: {{ .Values.codaImage }}
        command: ["coda"]
        args: [ "daemon",
          "-log-level", "Info", 
          "-log-json",
          "-config-directory", "/root/coda-config", 
          "-client-port", "$(DAEMON_CLIENT_PORT)", 
          "-rest-port", "$(DAEMON_REST_PORT)", 
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",  
          "-discovery-port", "$(DAEMON_DISCOVERY_PORT)", 
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-run-snark-worker", "$(CODA_SNARK_KEY)", 
          "-snark-worker-fee", "$(CODA_SNARK_FEE)",
          {{- range .Values.seedPeers }}
          "-peer", {{ . | quote }},
          {{- end }}
        ]
        env:
          - name: DAEMON_REST_PORT
            value: "8304"
          - name: DAEMON_CLIENT_PORT
            value: "8301"
          - name: DAEMON_METRICS_PORT
            value: "10004"
          - name: DAEMON_EXTERNAL_PORT
            value: {{ add .Values.startingPorts 11 | quote }}
          - name: DAEMON_DISCOVERY_PORT
            value: {{ add .Values.startingPorts 12 | quote }}
          - name: CODA_SNARK_KEY
            value: {{ .Values.snarkWorker.key | quote }}
          - name: CODA_SNARK_FEE
            value: {{ .Values.snarkWorker.fee | quote }}
        ports:
          - containerPort: {{ add .Values.startingPorts 11 }}
            hostPort: {{ add .Values.startingPorts 11 }}
            protocol: TCP
          - containerPort: {{ add .Values.startingPorts 12 }}
            hostPort: {{ add .Values.startingPorts 12 }}
            protocol: TCP
        imagePullPolicy: Always
