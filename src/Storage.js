// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var $$Storage = require("@google-cloud/storage");

var client = new $$Storage.Storage();

function upload(bucket, filename, contents, onError) {
  console.log("Uploading " + (String(filename) + ""));
  try {
    client.bucket(bucket).file(filename).save(contents, /* record */[/* resumable */false], onError);
    return /* () */0;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      var match = exn[1].message;
      if (match !== undefined) {
        console.log("Error: " + (String(match) + ""));
        return /* () */0;
      } else {
        console.log("An unknown error occured while uploading file " + (String(filename) + (" to " + (String(bucket) + "."))));
        return /* () */0;
      }
    } else {
      throw exn;
    }
  }
}

function list(bucket, cb) {
  return client.bucket(bucket).getFiles(cb);
}

var keypairBucket = "network-keypairs";

var keysetBucket = "network-keysets";

exports.client = client;
exports.keypairBucket = keypairBucket;
exports.keysetBucket = keysetBucket;
exports.upload = upload;
exports.list = list;
/* client Not a pure module */
