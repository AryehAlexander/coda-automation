// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Mkdirp = require("mkdirp");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

var baseDir = "/usr/local/var/coda-network";

var keypairsDir = "/usr/local/var/coda-network/keypairs/";

var keysetsDir = "/usr/local/var/coda-network/keysets/";

function modelDir(model) {
  if (model) {
    return keysetsDir;
  } else {
    return keypairsDir;
  }
}

function write(model, filename, contents) {
  var base = model ? keysetsDir : keypairsDir;
  Mkdirp.sync(base);
  var path = base + filename;
  try {
    Fs.writeFileSync(path, contents, "utf8");
    return ;
  }
  catch (raw_e){
    var e = Caml_js_exceptions.internalToOCamlException(raw_e);
    if (e[0] === Js_exn.$$Error) {
      var msg = e[1].message;
      if (msg !== undefined) {
        console.log("Error: " + (String(msg) + ""));
        return ;
      } else {
        console.log("An unknown error occured while writing a keypair to " + (String(filename) + ""));
        return ;
      }
    }
    throw e;
  }
}

function list(model) {
  return Fs.readdirSync(model ? keysetsDir : keypairsDir);
}

exports.baseDir = baseDir;
exports.keypairsDir = keypairsDir;
exports.keysetsDir = keysetsDir;
exports.modelDir = modelDir;
exports.write = write;
exports.list = list;
/* fs Not a pure module */
