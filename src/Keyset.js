// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var $$Array = require("bs-platform/lib/js/array.js");
var Cache$CodaNetwork = require("./Cache.js");
var Storage$CodaNetwork = require("./Storage.js");

function create(name) {
  return {
          name: name,
          entries: []
        };
}

function stringify(keyset) {
  return JSON.stringify(keyset);
}

function write(keyset) {
  var filename = keyset.name;
  return Cache$CodaNetwork.write(/* Keyset */1, filename, JSON.stringify(keyset));
}

function load(name) {
  var filename = Cache$CodaNetwork.keysetsDir + name;
  if (!Fs.existsSync(filename)) {
    return ;
  }
  var raw = Fs.readFileSync(filename, "utf8");
  return JSON.parse(raw);
}

function append(keyset, publicKey, nickname) {
  return {
          name: keyset.name,
          entries: $$Array.append([{
                  publicKey: publicKey,
                  nickname: nickname
                }], keyset.entries)
        };
}

function appendKeypair(keyset, keypair) {
  return append(keyset, keypair.publicKey, keypair.nickname);
}

function upload(keyset) {
  var filename = Cache$CodaNetwork.keysetsDir + keyset.name;
  Storage$CodaNetwork.upload(Storage$CodaNetwork.keysetBucket, filename);
  
}

function list(param) {
  return Cache$CodaNetwork.list(/* Keyset */1);
}

exports.create = create;
exports.stringify = stringify;
exports.write = write;
exports.load = load;
exports.append = append;
exports.appendKeypair = appendKeypair;
exports.upload = upload;
exports.list = list;
/* fs Not a pure module */
